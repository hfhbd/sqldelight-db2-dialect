public final class app/softwork/sqldelight/db2dialect/Db2Dialect : app/cash/sqldelight/dialect/api/SqlDelightDialect {
	public fun <init> ()V
	public fun getAllowsReferenceCycles ()Z
	public fun getAsyncRuntimeTypes ()Lapp/cash/sqldelight/dialect/api/RuntimeTypes;
	public fun getConnectionManager ()Lapp/cash/sqldelight/dialect/api/ConnectionManager;
	public fun getIcon ()Ljavax/swing/Icon;
	public fun getMigrationStrategy ()Lapp/cash/sqldelight/dialect/api/SqlGeneratorStrategy;
	public fun getPredefinedSystemTables ()Ljava/util/List;
	public fun getRuntimeTypes ()Lapp/cash/sqldelight/dialect/api/RuntimeTypes;
	public fun isSqlite ()Z
	public fun migrationSquasher (Lapp/cash/sqldelight/dialect/api/MigrationSquasher;)Lapp/cash/sqldelight/dialect/api/MigrationSquasher;
	public fun setup ()V
	public fun typeResolver (Lapp/cash/sqldelight/dialect/api/TypeResolver;)Lapp/cash/sqldelight/dialect/api/TypeResolver;
}

public final class app/softwork/sqldelight/db2dialect/SetQueryWithResults : app/cash/sqldelight/dialect/api/QueryWithResults {
	public fun <init> (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SetStmt;)V
	public fun getPureTable ()Lcom/alecstrong/sql/psi/core/psi/NamedElement;
	public fun getSelect ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SetStmt;
	public synthetic fun getSelect ()Lcom/alecstrong/sql/psi/core/psi/QueryElement;
	public fun getStatement ()Lcom/alecstrong/sql/psi/core/psi/SqlAnnotatedElement;
	public fun setStatement (Lcom/alecstrong/sql/psi/core/psi/SqlAnnotatedElement;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/Db2Parser : com/intellij/lang/LightPsiParser, com/intellij/lang/PsiParser {
	public fun <init> ()V
	public static fun approximate_numeric_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun as_identity_clause_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun big_int_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun binary_large_object_string_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun binary_string_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun bind_expr_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun bind_parameter_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun bit_string_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun boolean_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun char_length_units_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun character_large_object_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun character_large_object_length_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun character_string_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun compound_select_stmt_internal_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun date_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun end_field_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun extension_stmt_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun fixed_point_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun generated_clause_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun host_variable_binding_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun host_variable_id_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun host_variable_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun int_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun interval_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun interval_qualifier_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun multiplier_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun non_second_primary_datetime_field_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun overrides_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public fun parse (Lcom/intellij/psi/tree/IElementType;Lcom/intellij/lang/PsiBuilder;)Lcom/intellij/lang/ASTNode;
	public fun parseLight (Lcom/intellij/psi/tree/IElementType;Lcom/intellij/lang/PsiBuilder;)V
	protected fun parse_root_ (Lcom/intellij/psi/tree/IElementType;Lcom/intellij/lang/PsiBuilder;)Z
	public static fun precision_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun scale_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun select_into_clause_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun select_stmt_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun set_setter_clause_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun set_stmt_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun single_datetime_field_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun small_int_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun start_field_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun tiny_int_data_type_real (Lcom/intellij/lang/PsiBuilder;I)Z
	public static fun type_name_real (Lcom/intellij/lang/PsiBuilder;I)Z
}

public final class app/softwork/sqldelight/db2dialect/grammar/Db2ParserUtil : com/intellij/lang/parser/GeneratedParserUtilBase {
	public static final field INSTANCE Lapp/softwork/sqldelight/db2dialect/grammar/Db2ParserUtil;
	public static final fun approximateNumericDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun asIdentityClauseExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun bigIntDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun binaryLargeObjectStringDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun binaryStringDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun bindExprExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun bindParameterExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun bitStringDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun booleanDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun charLengthUnitsExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun characterLargeObjectDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun characterLargeObjectLengthExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun characterStringDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun compoundSelectStmtInternalExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun dateDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun endFieldExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun extensionStmtExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun fixedPointDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun generatedClauseExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public final fun getApproximate_numeric_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getAs_identity_clause ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getBig_int_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getBinary_large_object_string_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getBinary_string_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getBind_expr ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getBind_parameter ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getBit_string_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getBoolean_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getChar_length_units ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getCharacter_large_object_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getCharacter_large_object_length ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getCharacter_string_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getCompound_select_stmt_internal ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getCreateElement ()Lkotlin/jvm/functions/Function1;
	public final fun getDate_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getEnd_field ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getExtension_stmt ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getFixed_point_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getGenerated_clause ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getHost_variable ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getHost_variable_binding ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getHost_variable_id ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getInt_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getInterval_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getInterval_qualifier ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getMultiplier ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getNon_second_primary_datetime_field ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getOverrides ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getPrecision ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getScale ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getSelect_into_clause ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getSelect_stmt ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getSet_setter_clause ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getSet_stmt ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getSingle_datetime_field ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getSmall_int_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getStart_field ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getTiny_int_data_type ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public final fun getType_name ()Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;
	public static final fun hostVariableBindingExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun hostVariableExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun hostVariableIdExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun intDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun intervalDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun intervalQualifierExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun multiplierExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun nonSecondPrimaryDatetimeFieldExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public final fun overrideSqlParser ()V
	public static final fun overridesExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun precisionExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public final fun reset ()V
	public static final fun scaleExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun selectIntoClauseExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun selectStmtExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public final fun setApproximate_numeric_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setAs_identity_clause (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setBig_int_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setBinary_large_object_string_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setBinary_string_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setBind_expr (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setBind_parameter (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setBit_string_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setBoolean_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setChar_length_units (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setCharacter_large_object_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setCharacter_large_object_length (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setCharacter_string_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setCompound_select_stmt_internal (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setCreateElement (Lkotlin/jvm/functions/Function1;)V
	public final fun setDate_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setEnd_field (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setExtension_stmt (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setFixed_point_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setGenerated_clause (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setHost_variable (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setHost_variable_binding (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setHost_variable_id (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setInt_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setInterval_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setInterval_qualifier (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setMultiplier (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setNon_second_primary_datetime_field (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setOverrides (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setPrecision (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setScale (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setSelect_into_clause (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setSelect_stmt (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setSet_setter_clause (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setSet_stmt (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public static final fun setSetterClauseExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public final fun setSingle_datetime_field (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setSmall_int_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setStart_field (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public static final fun setStmtExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public final fun setTiny_int_data_type (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public final fun setType_name (Lcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)V
	public static final fun singleDatetimeFieldExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun smallIntDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun startFieldExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun tinyIntDataTypeExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
	public static final fun typeNameExt (Lcom/intellij/lang/PsiBuilder;ILcom/intellij/lang/parser/GeneratedParserUtilBase$Parser;)Z
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2ApproximateNumericDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getPrecision ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Precision;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2AsIdentityClause : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2BigIntDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryLargeObjectStringDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryStringDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getBinaryLargeObjectStringDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryLargeObjectStringDataType;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2BindExpr : com/alecstrong/sql/psi/core/psi/SqlBindExpr {
	public abstract fun getBindParameter ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BindParameter;
	public synthetic fun getBindParameter ()Lcom/alecstrong/sql/psi/core/psi/SqlBindParameter;
	public abstract fun getHostVariable ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariable;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2BindParameter : com/alecstrong/sql/psi/core/psi/SqlBindParameter {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2BitStringDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2BooleanDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2CharLengthUnits : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getCharacterLargeObjectLength ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectLength;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectLength : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getCharLengthUnits ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharLengthUnits;
	public abstract fun getMultiplier ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Multiplier;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterStringDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getCharacterLargeObjectDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectDataType;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2CompoundSelectStmtInternal : com/alecstrong/sql/psi/core/psi/SqlCompoundSelectStmt {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2DateDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2EndField : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getNonSecondPrimaryDatetimeField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2ExtensionStmt : com/alecstrong/sql/psi/core/psi/SqlExtensionStmt {
	public abstract fun getSetStmt ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SetStmt;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2FixedPointDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getPrecision ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Precision;
	public abstract fun getScale ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Scale;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2GeneratedClause : com/alecstrong/sql/psi/core/psi/SqlGeneratedClause {
	public abstract fun getAsIdentityClause ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2AsIdentityClause;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariable : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getHostVariableBinding ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableBinding;
	public abstract fun getHostVariableId ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableId;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableBinding : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableId : com/alecstrong/sql/psi/core/psi/NamedElement, com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2IntDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getIntervalQualifier ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalQualifier;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalQualifier : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getEndField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2EndField;
	public abstract fun getSingleDatetimeField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SingleDatetimeField;
	public abstract fun getStartField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2StartField;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2Multiplier : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2Overrides : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getBindExpr ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BindExpr;
	public abstract fun getBindParameter ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BindParameter;
	public abstract fun getExtensionStmt ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2ExtensionStmt;
	public abstract fun getGeneratedClause ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2GeneratedClause;
	public abstract fun getSelectStmt ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectStmt;
	public abstract fun getTypeName ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2TypeName;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2Precision : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2Scale : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectIntoClause : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getHostVariableList ()Ljava/util/List;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectStmt : com/alecstrong/sql/psi/core/psi/SqlSelectStmt {
	public abstract fun getSelectIntoClause ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectIntoClause;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2SetSetterClause : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2SetStmt : com/alecstrong/sql/psi/core/psi/QueryElement, com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getCompoundSelectStmtInternal ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CompoundSelectStmtInternal;
	public abstract fun getHostVariableList ()Ljava/util/List;
	public abstract fun getSetSetterClause ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SetSetterClause;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2SingleDatetimeField : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getNonSecondPrimaryDatetimeField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2SmallIntDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2StartField : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
	public abstract fun getNonSecondPrimaryDatetimeField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2TinyIntDataType : com/alecstrong/sql/psi/core/psi/SqlCompositeElement {
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2TypeName : com/alecstrong/sql/psi/core/psi/SqlTypeName {
	public abstract fun getApproximateNumericDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2ApproximateNumericDataType;
	public abstract fun getBigIntDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BigIntDataType;
	public abstract fun getBinaryStringDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryStringDataType;
	public abstract fun getBitStringDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BitStringDataType;
	public abstract fun getBooleanDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BooleanDataType;
	public abstract fun getCharacterStringDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterStringDataType;
	public abstract fun getDateDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2DateDataType;
	public abstract fun getFixedPointDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2FixedPointDataType;
	public abstract fun getIntDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntDataType;
	public abstract fun getIntervalDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalDataType;
	public abstract fun getSmallIntDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SmallIntDataType;
	public abstract fun getTinyIntDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2TinyIntDataType;
}

public abstract interface class app/softwork/sqldelight/db2dialect/grammar/psi/Db2Types {
	public static final field ALL Lcom/intellij/psi/tree/IElementType;
	public static final field ALWAYS Lcom/intellij/psi/tree/IElementType;
	public static final field APPROXIMATE_NUMERIC_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field AS Lcom/intellij/psi/tree/IElementType;
	public static final field AS_IDENTITY_CLAUSE Lcom/intellij/psi/tree/IElementType;
	public static final field BIG_INT_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field BINARY_LARGE_OBJECT_STRING_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field BINARY_STRING_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field BIND_EXPR Lcom/intellij/psi/tree/IElementType;
	public static final field BIND_PARAMETER Lcom/intellij/psi/tree/IElementType;
	public static final field BIT_STRING_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field BOOLEAN_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field BY Lcom/intellij/psi/tree/IElementType;
	public static final field CHARACTER_LARGE_OBJECT_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field CHARACTER_LARGE_OBJECT_LENGTH Lcom/intellij/psi/tree/IElementType;
	public static final field CHARACTER_STRING_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field CHAR_LENGTH_UNITS Lcom/intellij/psi/tree/IElementType;
	public static final field COMMA Lcom/intellij/psi/tree/IElementType;
	public static final field COMPOUND_SELECT_STMT_INTERNAL Lcom/intellij/psi/tree/IElementType;
	public static final field DATE_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field DEFAULT Lcom/intellij/psi/tree/IElementType;
	public static final field DIGIT Lcom/intellij/psi/tree/IElementType;
	public static final field DISTINCT Lcom/intellij/psi/tree/IElementType;
	public static final field EACH Lcom/intellij/psi/tree/IElementType;
	public static final field END_FIELD Lcom/intellij/psi/tree/IElementType;
	public static final field EQ Lcom/intellij/psi/tree/IElementType;
	public static final field EXTENSION_STMT Lcom/intellij/psi/tree/IElementType;
	public static final field FIXED_POINT_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field FOR Lcom/intellij/psi/tree/IElementType;
	public static final field FROM Lcom/intellij/psi/tree/IElementType;
	public static final field GENERATED Lcom/intellij/psi/tree/IElementType;
	public static final field GENERATED_CLAUSE Lcom/intellij/psi/tree/IElementType;
	public static final field GROUP Lcom/intellij/psi/tree/IElementType;
	public static final field HAVING Lcom/intellij/psi/tree/IElementType;
	public static final field HOST_VARIABLE Lcom/intellij/psi/tree/IElementType;
	public static final field HOST_VARIABLE_BINDING Lcom/intellij/psi/tree/IElementType;
	public static final field HOST_VARIABLE_ID Lcom/intellij/psi/tree/IElementType;
	public static final field ID Lcom/intellij/psi/tree/IElementType;
	public static final field INTERVAL_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field INTERVAL_QUALIFIER Lcom/intellij/psi/tree/IElementType;
	public static final field INTO Lcom/intellij/psi/tree/IElementType;
	public static final field INT_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field LP Lcom/intellij/psi/tree/IElementType;
	public static final field MULTIPLIER Lcom/intellij/psi/tree/IElementType;
	public static final field NO Lcom/intellij/psi/tree/IElementType;
	public static final field NON_SECOND_PRIMARY_DATETIME_FIELD Lcom/intellij/psi/tree/IElementType;
	public static final field ON Lcom/intellij/psi/tree/IElementType;
	public static final field ORDER Lcom/intellij/psi/tree/IElementType;
	public static final field OVERRIDES Lcom/intellij/psi/tree/IElementType;
	public static final field PRECISION Lcom/intellij/psi/tree/IElementType;
	public static final field ROW Lcom/intellij/psi/tree/IElementType;
	public static final field RP Lcom/intellij/psi/tree/IElementType;
	public static final field SCALE Lcom/intellij/psi/tree/IElementType;
	public static final field SELECT Lcom/intellij/psi/tree/IElementType;
	public static final field SELECT_INTO_CLAUSE Lcom/intellij/psi/tree/IElementType;
	public static final field SELECT_STMT Lcom/intellij/psi/tree/IElementType;
	public static final field SET Lcom/intellij/psi/tree/IElementType;
	public static final field SET_SETTER_CLAUSE Lcom/intellij/psi/tree/IElementType;
	public static final field SET_STMT Lcom/intellij/psi/tree/IElementType;
	public static final field SINGLE_DATETIME_FIELD Lcom/intellij/psi/tree/IElementType;
	public static final field SMALL_INT_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field START_FIELD Lcom/intellij/psi/tree/IElementType;
	public static final field TINY_INT_DATA_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field TO Lcom/intellij/psi/tree/IElementType;
	public static final field TYPE_NAME Lcom/intellij/psi/tree/IElementType;
	public static final field UPDATE Lcom/intellij/psi/tree/IElementType;
	public static final field VALUES Lcom/intellij/psi/tree/IElementType;
	public static final field WHERE Lcom/intellij/psi/tree/IElementType;
	public static final field WITH Lcom/intellij/psi/tree/IElementType;
	public static final field WITHOUT Lcom/intellij/psi/tree/IElementType;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/Db2Types$Factory {
	public fun <init> ()V
	public static fun createElement (Lcom/intellij/lang/ASTNode;)Lcom/intellij/psi/PsiElement;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor : com/intellij/psi/PsiElementVisitor {
	public fun <init> ()V
	public fun visitApproximateNumericDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2ApproximateNumericDataType;)V
	public fun visitAsIdentityClause (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2AsIdentityClause;)V
	public fun visitBigIntDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BigIntDataType;)V
	public fun visitBinaryLargeObjectStringDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryLargeObjectStringDataType;)V
	public fun visitBinaryStringDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryStringDataType;)V
	public fun visitBindExpr (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BindExpr;)V
	public fun visitBindParameter (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BindParameter;)V
	public fun visitBitStringDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BitStringDataType;)V
	public fun visitBooleanDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BooleanDataType;)V
	public fun visitCharLengthUnits (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharLengthUnits;)V
	public fun visitCharacterLargeObjectDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectDataType;)V
	public fun visitCharacterLargeObjectLength (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectLength;)V
	public fun visitCharacterStringDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterStringDataType;)V
	public fun visitCompoundSelectStmtInternal (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CompoundSelectStmtInternal;)V
	public fun visitDateDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2DateDataType;)V
	public fun visitEndField (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2EndField;)V
	public fun visitExtensionStmt (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2ExtensionStmt;)V
	public fun visitFixedPointDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2FixedPointDataType;)V
	public fun visitGeneratedClause (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2GeneratedClause;)V
	public fun visitHostVariable (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariable;)V
	public fun visitHostVariableBinding (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableBinding;)V
	public fun visitHostVariableId (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableId;)V
	public fun visitIntDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntDataType;)V
	public fun visitIntervalDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalDataType;)V
	public fun visitIntervalQualifier (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalQualifier;)V
	public fun visitMultiplier (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Multiplier;)V
	public fun visitNamedElement (Lcom/alecstrong/sql/psi/core/psi/NamedElement;)V
	public fun visitNonSecondPrimaryDatetimeField (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField;)V
	public fun visitOverrides (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Overrides;)V
	public fun visitPrecision (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Precision;)V
	public fun visitQueryElement (Lcom/alecstrong/sql/psi/core/psi/QueryElement;)V
	public fun visitScale (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Scale;)V
	public fun visitSelectIntoClause (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectIntoClause;)V
	public fun visitSelectStmt (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectStmt;)V
	public fun visitSetSetterClause (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SetSetterClause;)V
	public fun visitSetStmt (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SetStmt;)V
	public fun visitSingleDatetimeField (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SingleDatetimeField;)V
	public fun visitSmallIntDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SmallIntDataType;)V
	public fun visitSqlBindExpr (Lcom/alecstrong/sql/psi/core/psi/SqlBindExpr;)V
	public fun visitSqlBindParameter (Lcom/alecstrong/sql/psi/core/psi/SqlBindParameter;)V
	public fun visitSqlCompositeElement (Lcom/alecstrong/sql/psi/core/psi/SqlCompositeElement;)V
	public fun visitSqlCompoundSelectStmt (Lcom/alecstrong/sql/psi/core/psi/SqlCompoundSelectStmt;)V
	public fun visitSqlExtensionStmt (Lcom/alecstrong/sql/psi/core/psi/SqlExtensionStmt;)V
	public fun visitSqlGeneratedClause (Lcom/alecstrong/sql/psi/core/psi/SqlGeneratedClause;)V
	public fun visitSqlSelectStmt (Lcom/alecstrong/sql/psi/core/psi/SqlSelectStmt;)V
	public fun visitSqlTypeName (Lcom/alecstrong/sql/psi/core/psi/SqlTypeName;)V
	public fun visitStartField (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2StartField;)V
	public fun visitTinyIntDataType (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2TinyIntDataType;)V
	public fun visitTypeName (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2TypeName;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2ApproximateNumericDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2ApproximateNumericDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getPrecision ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Precision;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2AsIdentityClauseImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2AsIdentityClause {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2BigIntDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2BigIntDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2BinaryLargeObjectStringDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryLargeObjectStringDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2BinaryStringDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryStringDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getBinaryLargeObjectStringDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryLargeObjectStringDataType;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2BindExprImpl : com/alecstrong/sql/psi/core/psi/impl/SqlBindExprImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2BindExpr {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getBindParameter ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BindParameter;
	public synthetic fun getBindParameter ()Lcom/alecstrong/sql/psi/core/psi/SqlBindParameter;
	public fun getHostVariable ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariable;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2BindParameterImpl : com/alecstrong/sql/psi/core/psi/impl/SqlBindParameterImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2BindParameter {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2BitStringDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2BitStringDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2BooleanDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2BooleanDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2CharLengthUnitsImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2CharLengthUnits {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2CharacterLargeObjectDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getCharacterLargeObjectLength ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectLength;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2CharacterLargeObjectLengthImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectLength {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getCharLengthUnits ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharLengthUnits;
	public fun getMultiplier ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Multiplier;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2CharacterStringDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterStringDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getCharacterLargeObjectDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterLargeObjectDataType;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2CompoundSelectStmtInternalImpl : app/softwork/sqldelight/db2dialect/grammar/psi/Db2CompoundSelectStmtInternal {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2DateDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2DateDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2EndFieldImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2EndField {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getNonSecondPrimaryDatetimeField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2ExtensionStmtImpl : com/alecstrong/sql/psi/core/psi/impl/SqlExtensionStmtImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2ExtensionStmt {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getSetStmt ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SetStmt;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2FixedPointDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2FixedPointDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getPrecision ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Precision;
	public fun getScale ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Scale;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2GeneratedClauseImpl : com/alecstrong/sql/psi/core/psi/impl/SqlGeneratedClauseImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2GeneratedClause {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getAsIdentityClause ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2AsIdentityClause;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2HostVariableBindingImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableBinding {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2HostVariableIdImpl : app/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableId {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2HostVariableImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariable {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getHostVariableBinding ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableBinding;
	public fun getHostVariableId ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2HostVariableId;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2IntDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2IntDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2IntervalDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getIntervalQualifier ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalQualifier;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2IntervalQualifierImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalQualifier {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getEndField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2EndField;
	public fun getSingleDatetimeField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SingleDatetimeField;
	public fun getStartField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2StartField;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2MultiplierImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2Multiplier {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2NonSecondPrimaryDatetimeFieldImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2OverridesImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2Overrides {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getBindExpr ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BindExpr;
	public fun getBindParameter ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BindParameter;
	public fun getExtensionStmt ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2ExtensionStmt;
	public fun getGeneratedClause ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2GeneratedClause;
	public fun getSelectStmt ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectStmt;
	public fun getTypeName ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2TypeName;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2PrecisionImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2Precision {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2ScaleImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2Scale {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2SelectIntoClauseImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectIntoClause {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getHostVariableList ()Ljava/util/List;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2SelectStmtImpl : app/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectStmt {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getSelectIntoClause ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SelectIntoClause;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2SetSetterClauseImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2SetSetterClause {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2SetStmtImpl : app/softwork/sqldelight/db2dialect/grammar/psi/Db2SetStmt {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getCompoundSelectStmtInternal ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CompoundSelectStmtInternal;
	public fun getHostVariableList ()Ljava/util/List;
	public fun getSetSetterClause ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SetSetterClause;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2SingleDatetimeFieldImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2SingleDatetimeField {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getNonSecondPrimaryDatetimeField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2SmallIntDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2SmallIntDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2StartFieldImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2StartField {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getNonSecondPrimaryDatetimeField ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2NonSecondPrimaryDatetimeField;
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2TinyIntDataTypeImpl : com/alecstrong/sql/psi/core/psi/SqlCompositeElementImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2TinyIntDataType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
}

public class app/softwork/sqldelight/db2dialect/grammar/psi/impl/Db2TypeNameImpl : com/alecstrong/sql/psi/core/psi/impl/SqlTypeNameImpl, app/softwork/sqldelight/db2dialect/grammar/psi/Db2TypeName {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2Visitor;)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun getApproximateNumericDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2ApproximateNumericDataType;
	public fun getBigIntDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BigIntDataType;
	public fun getBinaryStringDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BinaryStringDataType;
	public fun getBitStringDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BitStringDataType;
	public fun getBooleanDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2BooleanDataType;
	public fun getCharacterStringDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2CharacterStringDataType;
	public fun getDateDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2DateDataType;
	public fun getFixedPointDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2FixedPointDataType;
	public fun getIntDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntDataType;
	public fun getIntervalDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2IntervalDataType;
	public fun getSmallIntDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2SmallIntDataType;
	public fun getTinyIntDataType ()Lapp/softwork/sqldelight/db2dialect/grammar/psi/Db2TinyIntDataType;
}

